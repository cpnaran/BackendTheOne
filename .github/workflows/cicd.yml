name: Deploy BackendTheOne
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t theoneparking/backendtheone  .

      - name: Publish Image to Docker Hub
        run: docker push theoneparking/backendtheone:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from Docker Hub
        run: docker pull theoneparking/backendtheone:latest

      - name: Delete old container
        run: docker rm -f backendtheone-container

      - name: Remove previous Docker image
        run: |
          docker image prune -f --filter "until=24h"
          docker rmi theoneparking/backendtheone:latest || true

      - name: Create .env file on the server
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "FRONT_END_BASE_URL=${{ secrets.FRONT_END_BASE_URL }}" >> .env
          echo "FRONT_END_PORT=${{ secrets.FRONT_END_PORT }}" >> .env
          echo "ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }}" >> .env
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env
          echo "PHONE_NUMBER=${{ secrets.PHONE_NUMBER }}" >> .env
          echo "API_KEY_IMG_BB=${{ secrets.API_KEY_IMG_BB }}" >> .env
          echo "API_KEY_SLIP_OK=${{ secrets.API_KEY_SLIP_OK }}" >> .env
          echo "URL_SLIP_OK=${{ secrets.URL_SLIP_OK }}" >> .env
          echo "AUTH_USERNAME=${{ secrets.AUTH_USERNAME }}" >> .env
          echo "AUTH_PASSWORD=${{ secrets.AUTH_PASSWORD }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "REFRESH_JWT_SECRET=${{ secrets.REFRESH_JWT_SECRET }}" >> .env
          echo "IP_USERNAME=${{secrets.IP_USERNAME}}" >> .env
          echo "IP_PASSWORD=${{secrets.IP_PASSWORD}}" >> .env
          echo "URL_CAMERA=${{secrets.URL_CAMERA}}" >> .env
          echo "CHANNEL_SECRET=${{secrets.CHANNEL_SECRET}}" >> .env
          echo "CLIENT_ID=${{secrets.CLIENT_ID}}" >> .env
          echo "PROJECT_ID=${{secrets.PROJECT_ID}}" >> .env
          echo "AUTH_URI=${{secrets.AUTH_URI}}" >> .env
          echo "TOKEN_URI=${{secrets.TOKEN_URI}}" >> .env
          echo "AUTH_PROVIDER_X509_CERT_URL=${{secrets.AUTH_PROVIDER_X509_CERT_URL}}" >> .env
          echo "CLIENT_SECRET=${{secrets.CLIENT_SECRET}}" >> .env
          echo "REDIRECT_URIS=${{secrets.REDIRECT_URIS}}" >> .env
          echo "ACCESS_TOKEN_GOOGLE=${{secrets.ACCESS_TOKEN_GOOGLE}}" >> .env
          echo "REFRESH_TOKEN=${{secrets.REFRESH_TOKEN}}" >> .env
          echo "SCOPE=${{secrets.SCOPE}}" >> .env
          echo "TOKEN_TYPE=${{secrets.TOKEN_TYPE}}" >> .env
          echo "EXPIRY_DATE=${{secrets.EXPIRY_DATE}}" >> .env

      - name: Run Docker Container
        run: docker run --restart=always --env-file .env -d -p 3000:3000 --name backendtheone-container theoneparking/backendtheone
